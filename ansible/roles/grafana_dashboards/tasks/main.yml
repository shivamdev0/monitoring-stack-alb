---
# 1Ô∏è‚É£ Check dashboard files on Ansible control node
- name: Check dashboard files exist locally
  stat:
    path: "{{ role_path }}/files/{{ item }}"
  loop:
    - node_exporter_dashboard.json
    - loki_logs_dashboard.json
    - monitoring_dashboard.json
  register: dashboards
  delegate_to: localhost
  run_once: true
  become: no   # üöÄ Prevent sudo

- name: Fail if any dashboard file missing
  fail:
    msg: "Dashboard file missing: {{ item.item }}"
  loop: "{{ dashboards.results }}"
  when: not item.stat.exists
  delegate_to: localhost
  run_once: true
  become: no   # üöÄ Prevent sudo

# 2Ô∏è‚É£ Import dashboards into Grafana (remote server)
- name: Import Grafana dashboards
  vars:
    api_base: "{{ (grafana_api_url | default('http://localhost:3000')) | regex_replace('/$','') }}"
  loop:
    - node_exporter_dashboard.json
    - loki_logs_dashboard.json
  loop_control:
    label: "{{ item }}"
  uri:
    url: "{{ api_base }}/api/dashboards/db"
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      dashboard: "{{ lookup('file', role_path + '/files/' + item) | from_json }}"
      overwrite: true
      folderId: 0
    status_code: 200
    validate_certs: "{{ grafana_validate_certs | default(true) }}"
  register: grafana_dash_results
  retries: 3
  delay: 2
  until: grafana_dash_results is succeeded

# 3Ô∏è‚É£ Debug output
- name: Show dashboard import results
  debug:
    var: grafana_dash_results

# 4Ô∏è‚É£ Import Monitoring Overview dashboard
- name: Import Monitoring Overview dashboard
  vars:
    api_base: "{{ (grafana_api_url | default('http://localhost:3000')) | regex_replace('/$','') }}"
  uri:
    url: "{{ api_base }}/api/dashboards/db"
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      dashboard: "{{ lookup('file', role_path + '/files/monitoring_dashboard.json') | from_json }}"
      overwrite: true
      folderId: 0
    status_code: 200
    validate_certs: "{{ grafana_validate_certs | default(true) }}"
  register: monitoring_dashboard_result
  retries: 3
  delay: 2
  until: monitoring_dashboard_result is succeeded

