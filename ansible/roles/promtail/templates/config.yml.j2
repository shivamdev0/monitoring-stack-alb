server:
  http_listen_address: 0.0.0.0
  http_listen_port: 9080
  grpc_listen_port: 0

# where promtail saves offsets
positions:
  filename: /var/lib/promtail/positions.yaml

# Loki client - prefer explicit loki_url variable, fallback to first host in role_monitoring
clients:
  - url: "{{ loki_url | default('http://' + (hostvars[groups['role_monitoring'][0]].private_ip_address if groups['role_monitoring'] is defined and groups['role_monitoring']|length > 0 else 'localhost') + ':3100/loki/api/v1/push') }}"

scrape_configs:
  - job_name: apache_access
    static_configs:
      - targets: [ "localhost" ]
        labels:
          job: apache_access
          host: "{{ inventory_hostname }}"
          __path__: /var/log/httpd/access_log

  - job_name: apache_error
    static_configs:
      - targets: [ "localhost" ]
        labels:
          job: apache_error
          host: "{{ inventory_hostname }}"
          __path__: /var/log/httpd/error_log

  - job_name: varlogs
    static_configs:
      - targets: [ "localhost" ]
        labels:
          job: varlogs
          host: "{{ inventory_hostname }}"
          __path__: /var/log/*.log

# Note: pipeline_stages intentionally omitted here to first ensure raw logs ingestion.
# Add parsing stages later (regex/timestamp/labels) once raw logs work in Loki.

